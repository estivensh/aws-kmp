name: Build and publish snapshot

on:
  push:
    branches: [ "doc/*" ]
    paths-ignore: [ '**.md', '**.MD', '!docs/**' ]
    tags-ignore:
      - '**'
  pull_request:
    branches: [ "doc/*" ]
    paths-ignore: [ '**.md', '**.MD', '!docs/**' ]
  workflow_dispatch:

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false -Dkotlin.incremental=false -XX:+UseParallelGC -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ self-hosted ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Cache gradle, wrapper and buildSrc
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ matrix.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ matrix.os }}-gradle-
      - name: Cache konan
        uses: actions/cache@v3
        with:
          path: |
            ~/.konan/cache
            ~/.konan/dependencies
            ~/.konan/kotlin-native-macos*
            ~/.konan/kotlin-native-mingw*
            ~/.konan/kotlin-native-windows*
            ~/.konan/kotlin-native-linux*
            ~/.konan/kotlin-native-prebuilt-macos*
            ~/.konan/kotlin-native-prebuilt-mingw*
            ~/.konan/kotlin-native-prebuilt-windows*
            ~/.konan/kotlin-native-prebuilt-linux*
          key: ${{ matrix.os }}-konan-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ matrix.os }}-konan-
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Kover Xml Report
        run: ./gradlew :koverXmlReport

      - name: Upload Test Report
        uses: codecov/codecov-action@v3.1.4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload Code Anaylysis To SonarCloud
        run: ./gradlew build sonar --info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload test report artifact
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: build/reports/tests/allTests/

# publish:
#   needs: [ build ]
#   strategy:
#     matrix:
#       os: [ macos-11 ]
#   runs-on: ${{ matrix.os }}
#   timeout-minutes: 30
#   steps:
#     - name: Checkout
#       uses: actions/checkout@v3

#     - name: Set up JDK
#       uses: actions/setup-java@v3
#       with:
#         distribution: 'zulu'
#         java-version: '17'

#     - name: Cache gradle, wrapper and buildSrc
#       uses: actions/cache@v3
#       with:
#         path: |
#           ~/.gradle/caches
#           ~/.gradle/wrapper
#         key: ${{ matrix.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
#         restore-keys: |
#           ${{ matrix.os }}-gradle-
#     - name: Cache konan
#       uses: actions/cache@v3
#       with:
#         path: |
#           ~/.konan/cache
#           ~/.konan/dependencies
#           ~/.konan/kotlin-native-macos*
#           ~/.konan/kotlin-native-mingw*
#           ~/.konan/kotlin-native-windows*
#           ~/.konan/kotlin-native-linux*
#           ~/.konan/kotlin-native-prebuilt-macos*
#           ~/.konan/kotlin-native-prebuilt-mingw*
#           ~/.konan/kotlin-native-prebuilt-windows*
#           ~/.konan/kotlin-native-prebuilt-linux*
#         key: ${{ matrix.os }}-konan-${{ hashFiles('**/*.gradle*') }}
#         restore-keys: |
#           ${{ matrix.os }}-konan-
#     - name: Make gradlew executable
#       run: chmod +x ./gradlew

#     - name: Generate docs
#       run: ./gradlew :dokkaHtmlMultiModule --no-parallel --stacktrace